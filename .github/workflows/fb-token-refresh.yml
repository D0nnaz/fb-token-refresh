name: FB Token Refresh

on:
  workflow_dispatch:
  schedule:
    - cron: '0 7 14 * *'  

permissions:
  contents: write

jobs:
  refresh:
    runs-on: ubuntu-latest

    env:
      CLIENT_ID: ${{ secrets.FB_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.FB_CLIENT_SECRET }}
      FB_SHORT_TOKEN: ${{ secrets.FB_SHORT_TOKEN }}
      SECRET_NAME: FB_LONG_TOKEN

    steps:
      - name: Checkout using PAT
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_WRITE }}
          persist-credentials: true

      - name: Refresh FB token
        id: refresh
        run: |
          NEW_TOKEN=$(curl -s \
            "https://graph.facebook.com/v23.0/oauth/access_token?grant_type=fb_exchange_token&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&fb_exchange_token=${FB_SHORT_TOKEN}" \
            | jq -r .access_token)

          if [[ -z "$NEW_TOKEN" || "$NEW_TOKEN" == "null" ]]; then
            echo "⚠️ Geen token ontvangen!"
            exit 1
          fi

          echo "new_token=$NEW_TOKEN" >> $GITHUB_OUTPUT
          echo "✅ Nieuwe token opgehaald"

      - name: Update GitHub secret
        run: |
          echo "${{ steps.refresh.outputs.new_token }}" \
            | gh secret set "${SECRET_NAME}" --repo "${GITHUB_REPOSITORY}"
        env:
          GH_TOKEN: ${{ secrets.PAT_WRITE }}

      - name: Persist token locally
        run: |
          echo "${{ steps.refresh.outputs.new_token }}" > long_lived_token_current.txt
          echo "$(date -u +"%Y-%m-%dT%H:%M:%SZ") ${{ steps.refresh.outputs.new_token }}" >> token_history.log

      - name: Notify via Slack
        run: |
          TEXT=$(printf '{"text":"🔑 *Nieuwe FB long-lived token*:\n```%s```"}' "${{ steps.refresh.outputs.new_token }}")
          curl -X POST \
            -H "Content-Type: application/json" \
            --data "${TEXT}" \
            "${{ secrets.SLACK_WEBHOOK_URL }}"
